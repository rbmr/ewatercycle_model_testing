---
name: Comment Artifact URL on PR

on:
  workflow_run:
    types:
      - "completed"
    workflows:
      - "Model Verification"

jobs:
  comment-on-pr:
    runs-on: self-hosted
    steps:
       # this job runs an elaborate script that gets the previous job (code above ensures that it is the model verification workflow), takes its artifacts (test results) and comments them under the related pull request.
       # the test results can then be downloaded from the comment as a .zip file.
       # In the future (github plans to implement it soon), this code could be improved by making the uploaded link open the human-readable format of the test results in a new tab as well as download them as a .zip file.
      - name: Get Artifact URL & PR Info
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN1 }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          WORKFLOW_RUN_EVENT_OBJ: ${{ toJSON(github.event.workflow_run) }}
        run: |

          PREVIOUS_JOB_ID=$(jq -r '.id' <<< "$WORKFLOW_RUN_EVENT_OBJ")
          echo "Previous Job ID: $PREVIOUS_JOB_ID"
          echo "PREVIOUS_JOB_ID=$PREVIOUS_JOB_ID" >> "$GITHUB_ENV"

          ARTIFACT_URL=$(gh api "/repos/$OWNER/$REPO/actions/artifacts" \
            --jq ".artifacts.[] |
            select(.workflow_run.id==${PREVIOUS_JOB_ID}) |
            select(.expired==false) |
            .archive_download_url")

          ARTIFACT_URL=$(echo $ARTIFACT_URL | awk -F actions/ '{print $2}')
          ARTIFACT_URL=$(echo $ARTIFACT_URL | awk -F /zip '{print $1}')
          echo "ARTIFACT URL: $ARTIFACT_URL"
          echo "ARTIFACT_URL=$ARTIFACT_URL" >> "$GITHUB_ENV"

          PR_NUMBER=$(jq -r '.pull_requests[0].number' \
            <<< "$WORKFLOW_RUN_EVENT_OBJ")

          echo "PR Number: $PR_NUMBER"
          echo "PR_NUMBER=$PR_NUMBER" >> "$GITHUB_ENV"

          HEAD_SHA=$(jq -r '.pull_requests[0].head.sha' \
            <<< "$WORKFLOW_RUN_EVENT_OBJ")

          echo "Head sha: $HEAD_SHA"
          echo "HEAD_SHA=$HEAD_SHA" >> "$GITHUB_ENV"

      - name: Update Comment
        env:
          JOB_PATH: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ env.PREVIOUS_JOB_ID }}"
          HEAD_SHA: ${{ env.HEAD_SHA }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ env.PR_NUMBER }}
          body: |-
            Test run complete! you can download the test results below ⬇️
             ${{ env.JOB_PATH }}/${{ env. ARTIFACT_URL }}

